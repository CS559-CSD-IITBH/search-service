mongo-url = "mongodb+srv://kkrypt:uniquecarbon@epoch.gsbkqce.mongodb.net/?retryWrites=true&w=majority"

elasticsearch-urls = ["http://elasticsearch:9200"]

direct-read-namespaces = ["campus-delivery-service.shops"]

# # if you want to use MongoDB change streams instead of legacy oplog tailing use change-stream-namespaces
# # change streams require at least MongoDB API 3.6+
# # if you have MongoDB 4+ you can listen for changes to an entire database or entire deployment
# # in this case you usually don't need regexes in your config to filter collections unless you target the deployment.
# # to listen to an entire db use only the database name.  For a deployment use an empty string.
# change-stream-namespaces = []

# if you don't want to listen for changes to all collections in MongoDB but only a few
# e.g. only listen for inserts, updates, deletes, and drops from mydb.mycollection
# this setting does not initiate a copy, it is only a filter on the change event listener
# namespace-regex = '^mydb\.mycollection$'
# # compress requests to Elasticsearch
# gzip = true
# # generate indexing statistics
# stats = true
# # index statistics into Elasticsearch
# index-stats = true
# # use the following user name for Elasticsearch basic auth
# elasticsearch-user = "someuser"
# # use the following password for Elasticsearch basic auth
# elasticsearch-password = "somepassword"
# # use 4 go routines concurrently pushing documents to Elasticsearch
# elasticsearch-max-conns = 4 
# # use the following PEM file to connections to Elasticsearch
# elasticsearch-pem-file = "/path/to/elasticCert.pem"
# # validate connections to Elasticsearch
# elastic-validate-pem-file = true
# # propogate dropped collections in MongoDB as index deletes in Elasticsearch
# dropped-collections = true
# # propogate dropped databases in MongoDB as index deletes in Elasticsearch
# dropped-databases = true
# # do not start processing at the beginning of the MongoDB oplog
# # if you set the replay to true you may see version conflict messages
# # in the log if you had synced previously. This just means that you are replaying old docs which are already
# # in Elasticsearch with a newer version. Elasticsearch is preventing the old docs from overwriting new ones.
# replay = false
# # resume processing from a timestamp saved in a previous run
# resume = true
# # do not validate that progress timestamps have been saved
# resume-write-unsafe = false
# # override the name under which resume state is saved
# resume-name = "default"
# # use a custom resume strategy (tokens) instead of the default strategy (timestamps)
# # tokens work with MongoDB API 3.6+ while timestamps work only with MongoDB API 4.0+
# resume-strategy = 1
# # exclude documents whose namespace matches the following pattern
# namespace-exclude-regex = '^mydb\.ignorecollection$'
# # turn on indexing of GridFS file content
# index-files = true
# # turn on search result highlighting of GridFS content
# file-highlighting = true
# # index GridFS files inserted into the following collections
# file-namespaces = ["users.fs.files"]
# # print detailed information including request traces
# verbose = true
# # enable clustering mode
# cluster-name = 'apollo'
# # do not exit after full-sync, rather continue tailing the oplog
# exit-after-direct-reads = false